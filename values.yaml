replicaCount: 1


# autoscaling:
#   enabled: true
#   minReplicas: 1
#   maxReplicas: 10  # Define max number of pods
#   targetCPUUtilizationPercentage: 80 # Trigger scaling when CPU usage reaches 80%
  # You can also use targetMemoryUtilizationPercentage if you want to scale based on memory

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 10  # Define max number of pods
  targetMemoryUtilizationPercentage: 70


image:
  repository: shindepratikk/sparrow-api
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: v1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  enabled: true                      # Enables the service
  type: ClusterIP                     # Service type
  port: 80                            # Port to expose
  targetPort: 9000                   # Port the container listens on
  labels:                             # Additional labels for the service
    run: sparrow-api                  # Custom label


livenessProbe:
  enabled: true  # Set to false to disable liveness probe
  port: 9000
  initialDelaySeconds: 40  # Adjust as necessary
  periodSeconds: 5
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

readinessProbe:
  enabled: true  # Set to false to disable readiness probe
  port: 9000
  initialDelaySeconds: 15  # Adjust as necessary
  periodSeconds: 5
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1


ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  enabled: true
  requests:
    # cpu: 100m
    memory: 1024Mi
  limits:
    # cpu: 150m
    memory: 1648Mi
#   # enabled: true
#   requests:
#     cpu: 100m           # Minimum CPU guaranteed to the pod
#     memory: 350Mi       # Increased minimum memory guaranteed to the pod
#   limits:
#     cpu: 500m           # Maximum CPU the pod can use
#     memory: 1500Mi      # Maximum memory the pod can use

  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  
  

# autoscaling:
#   enabled: false
#   minReplicas: 1
#   maxReplicas: 100
#   targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

secrets:
  PORT: "9000"
  APP_ENV: "DEV"
  APP_URL: "http://localhost"
  JWT_SECRET_KEY: "webtoken-secret-key"
  JWT_EXPIRATION_TIME: "2400"
  DB_URL: "mongodb://root:THlILUCAYD@sparrow-mongodb.sparrow-dev.svc.cluster.local/"
  GOOGLE_CLIENT_ID: "google-client-id"
  GOOGLE_CLIENT_SECRET: "google-client-secret"
  GOOGLE_APP_URL: "google-app-url"
  LOGIN_REDIRECT_URL: "login-redirect-url"
  GOOGLE_ACCESS_TYPE: "google-access-type"
  EMAIL_VALIDATION_CODE_EXPIRY_TIME: ""
  KAFKA_BROKER: "my-kafka-0.my-kafka-headless.sparrow-dev.svc.cluster.local:9092"
  SMTP_SENDER_EMAIL: ""
  SMTP_SENDER_PASSWORD: ""
  SMTP_MAIL_HOST: ""
  SMTP_MAIL_PORT: ""
  SMTP_MAIL_SECURE: ""
  SMTP_USER_NAME: ""
  REFRESH_TOKEN_SECRET_KEY: "refresh-token-secret"
  REFRESH_TOKEN_EXPIRATION_TIME: "604800"
  REFRESH_TOKEN_MAX_LIMIT: "50"
  APP_UPDATE_AVAILABLE: "true"
  APP_VERSION: ""
  WINDOWS_APP_SIGNATURE: ""
  WINDOWS_APP_URL: ""
  MAC_APPLE_SILICON_APP_SIGNATURE: ""
  MAC_APPLE_SILICON_APP_URL: ""
  MAC_INTEL_APP_SIGNATURE: ""
  MAC_INTEL_APP_URL: ""
  SPARROW_EMAIL: "sparrow@example.com"  
  AZURE_CONNECTION_STRING: "DefaultEndpointsProtocol=https;AccountName=sparrowassets;AccountKey=N7I6yZV7qV8J1B2UZTCKXGgPo6hI5VVbPJDk6Z4oeuBzITguuRbTtzAiiC+FzRPhYUa5JCkNTCfw+AStM8jPRQ==;EndpointSuffix=core.windows.net"
  AZURE_INSIGHTS_CONNECTION_STRING: "InstrumentationKey=a1a41bff-dd46-494c-8da5-16deca5daf32;IngestionEndpoint=https://centralindia-0.in.applicationinsights.azure.com/;LiveEndpoint=https://centralindia.livediagnostics.monitor.azure.com/;ApplicationId=79949c18-deba-4d2e-8ab5-00c1f2496b56"
  FEEDBACK_BLOB_CONTAINER: "feedbackfilesdev"
  AZURE_OPENAI_ENDPOINT: "https://sparrow-app.openai.azure.com/"
  AZURE_OPENAI_API_KEY: "91e4e4eb766c4518a24198d699600735"
  AZURE_OPENAI_DEPLOYMENT: "sparrow"
  AZURE_OPENAI_API_VERSION: "2024-02-15-preview"
  AZURE_OPENAI_MAX_TOKENS: "1000"
  AZURE_OPENAI_MONTHLY_TOKEN_LIMIT: "500"
  HUBSPOT_BASEURL: "https://api.hsforms.com"
  HUBSPOT_INTEGRATION_ENABLED: "false"
  HUBSPOT_PORTALID: "47180514"
  HUBSPOT_FORMID: "c3f6097b-b6a4-486a-8e60-ddd7dbefe535"